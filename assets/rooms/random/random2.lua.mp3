function loadSegments(old_segments, enable_coop)
    confSegment("basic/basic/chasms", 1)
    confSegment("basic/basic/chasms2", 1)
    confSegment("basic/basic/stairs", 1)
    confSegment("basic/basic/stairs2", 1)
    confSegment("basic/dark/bs", 1)
    confSegment("basic/dark/bs_extraballs", 1)
    confSegment("basic/dark/2_bs", 1)
    confSegment("basic/dark/2_bs_elevators", 1)
    confSegment("basic/dark/ledges", 1)
    confSegment("basic/darker/bs", 1)
    confSegment("basic/darker/2_bs_arch", 1)
    confSegment("basic/darker/chasms", 1)
    confSegment("basic/darker/chasms_bs", 1)
    confSegment("basic/darker/powerup", 1)
    confSegment("brownie/part3/16_0", 1)
    confSegment("brownie/part3/16_1", 1)
    confSegment("brownie/part3/16_2", 1)
    confSegment("brownie/part3/16_3", 1)
    confSegment("brownie/part2/16_0", 1)
    confSegment("brownie/part2/16_1", 1)
    confSegment("brownie/part2/16_2", 1)
    confSegment("brownie/part2/16_3", 1)
    confSegment("brownie/part1/16_0", 1)
    confSegment("brownie/part1/16_1", 1)
    confSegment("brownie/part1/16_2", 1)
    confSegment("brownie/part1/16_3", 1)
    confSegment("canyon/cave/8_0", 1)
    confSegment("canyon/cave/16_0", 1)
    confSegment("canyon/cave/32_0", 1)
    confSegment("canyon/columns/4_0", 1)
    confSegment("canyon/columns/16_1", 1)
    confSegment("canyon/columns/16_2", 1)
    confSegment("canyon/columns/32_0", 1)
    confSegment("canyon/trail/8_0", 1)
    confSegment("canyon/trail/16_0", 1)
    confSegment("canyon/trail/16_1", 1)
    confSegment("canyon/trail/16_2", 1)
    confSegment("canyon/trail/16_3", 1)
    confSegment("canyon/trail/32_0", 1)
    confSegment("cave/spin/16_0", 1)
    confSegment("cave/spin/16_1", 1)
    confSegment("cave/spin/16_2", 1)
    confSegment("cave/narrow/16_0", 1)
    confSegment("cave/narrow/16_1", 1)
    confSegment("cave/narrow/16_2", 1)
    confSegment("cave/narrow/16_3", 1)
    confSegment("cave/narrow/8_0", 1)
    confSegment("cave/narrow/8_1", 1)
    confSegment("cave/hall/32_0", 1)
    confSegment("cave/hall/16_1", 1)
    confSegment("cave/hall/16_2", 1)
    confSegment("cave/hall/16_3", 1)
    confSegment("cave/hall/8_0", 1)
    confSegment("cave/hall/8_1", 1)
    confSegment("cave/hall/8_2", 1)
    confSegment("cave/corridor/16_0", 1)
    confSegment("cave/corridor/16_1", 1)
    confSegment("cave/corridor/16_2", 1)
    confSegment("cave/corridor/16_3", 1)
    confSegment("cave/corridor/8_0", 1)
    confSegment("holodeck/bs", 1)
    confSegment("holodeck/bs2", 1)
    confSegment("holodeck/bs3", 1)
    confSegment("holodeck/fold", 1)
    confSegment("holodeck/fold2", 1)
    confSegment("holodeck/fold3", 1)
    confSegment("holodeck/bonus_16_0", 1)
    confSegment("holodeck/bonus_16_1", 1)
    confSegment("holodeck/bonus_16_2", 1)
    confSegment("holodeck/bonus_16_3", 1)
    confSegment("holodeck/calm0", 1)
    confSegment("holodeck/calm1", 1)
    confSegment("holodeck/rapid0", 1)
    confSegment("holodeck/rapid1", 1)
    confSegment("holodeck/rapid2", 1)
    confSegment("holodeck/rapid3", 1)
    confSegment("holodeck/rapid4", 1)
    confSegment("holodeck/rapid5", 1)
    confSegment("holodeck/rapid6", 1)
    confSegment("city/trench/16_0", 1)
    confSegment("city/trench/16_1", 1)
    confSegment("city/trench/16_2", 1)
    confSegment("city/trench/16_3", 1)
    confSegment("city/trench/16_4", 1)
    confSegment("city/trench/16_5", 1)
    confSegment("city/fall/32_0", 1)
    confSegment("city/fall/32_1", 1)
    confSegment("city/fall/32_2", 1)
    confSegment("city/fall/32_3", 1)
    confSegment("city/fall/32_4", 1)
    confSegment("city/fall/32_5", 1)
    confSegment("city/narrow/16_0", 1)
    confSegment("city/narrow/16_1", 1)
    confSegment("city/narrow/16_2", 1)
    confSegment("city/narrow/16_3", 1)
    confSegment("city/narrow/16_4", 1)
    confSegment("city/narrow/16_5", 1)
    confSegment("city/path/16_0", 1)
    confSegment("city/path/16_1", 1)
    confSegment("city/path/16_2", 1)
    confSegment("city/path/16_3", 1)
    confSegment("city/path/16_4", 1)
    confSegment("city/path/16_5", 1)
    confSegment("city/path2/16_0", 1)
    confSegment("city/path2/16_1", 1)
    confSegment("city/path2/16_2", 1)
    confSegment("city/path2/16_3", 1)
    confSegment("hyperspace/warp/32_0", 1)
    confSegment("hyperspace/warp/32_1", 1)
    confSegment("hyperspace/warp/32_2", 1)
    confSegment("hyperspace/warp/32_3", 1)
    confSegment("hyperspace/orbit/32_1", 1)
    confSegment("hyperspace/orbit/32_2", 1)
    confSegment("hyperspace/orbit/32_3", 1)
    confSegment("hyperspace/orbit/32_4", 1)
    confSegment("hyperspace/orbit/32_5", 1)
    confSegment("hyperspace/orbit/32_6", 1)
    confSegment("hyperspace/orbit/32_7", 1)
    confSegment("hyperspace/fall/32_0", 1)
    confSegment("hyperspace/fall/32_1", 1)
    confSegment("hyperspace/fall/32_2", 1)
    confSegment("hyperspace/fall/32_3", 1)
    confSegment("hyperspace/cruise/32_0", 1)
    confSegment("hyperspace/cruise/32_1", 1)
    confSegment("hyperspace/cruise/32_2", 1)
    confSegment("hyperspace/cruise/32_3", 1)
    confSegment("night/part3/elgrid_line_st", 1)
    confSegment("night/part3/elgrid_line_st2", 1)
    confSegment("night/part3/pendulums", 1)
    confSegment("night/part3/suspendcube", 1)
    confSegment("night/part3/suspendcubes", 1)
    confSegment("night/part3/suspendcubes_2", 1)
    confSegment("night/part3/suspendcubes_3", 1)
    confSegment("night/part2/crank", 1)
    confSegment("night/part2/crank2", 1)
    confSegment("night/part2/dna_dec", 1)
    confSegment("night/part2/dna_dec2", 1)
    confSegment("night/part2/dna_st", 1)
    confSegment("night/part2/dna_st2", 1)
    confSegment("night/part2/dna_st3", 1)
    confSegment("night/part2/bar", 1)
    confSegment("night/part2/iris", 1, 1)
    confSegment("night/part1/elgrid_box", 1)
    confSegment("night/part1/elgrid_box2", 1)
    confSegment("night/part1/elgrid_st", 1)
    confSegment("night/part1/elgrid_st_2", 1)
    confSegment("night/part1/elgrid_st_3", 1)
    confSegment("ocean/tunnel/16_0", 1)
    confSegment("ocean/tunnel/16_1", 1)
    confSegment("ocean/tunnel/16_2", 1)
    confSegment("ocean/tunnel/4_0", 1)
    confSegment("ocean/tunnel/4_1", 1)
    confSegment("ocean/tunnel/8_0", 1)
    confSegment("ocean/towers/16_0", 1)
    confSegment("ocean/towers/16_1", 1)
    confSegment("ocean/towers/16_2", 1)
    confSegment("ocean/towers/8_0", 1)
    confSegment("ocean/towers/8_1", 1)
    confSegment("ocean/towers/8_2", 1)
    confSegment("ocean/towers/8_3", 1)
    confSegment("ocean/stairs/16_0", 1)
    confSegment("ocean/stairs/32_0", 1)
    confSegment("ocean/stairs/8_0", 1)
    confSegment("ocean/stairs/8_1", 1)
    confSegment("ocean/stairs/8_2", 1)
    confSegment("ocean/sky/16_0", 1)
    confSegment("ocean/sky/4_0", 1)
    confSegment("ocean/sky/8_0", 1)
    confSegment("ocean/sky/8_1", 1)
    confSegment("phosphor/part4/16_0", 1)
    confSegment("phosphor/part4/16_1", 1)
    confSegment("phosphor/part4/16_2", 1)
    confSegment("phosphor/part4/16_3", 1)
    confSegment("phosphor/part3/16_0", 1)
    confSegment("phosphor/part3/16_1", 1)
    confSegment("phosphor/part3/16_2", 1)
    confSegment("phosphor/part3/16_3", 1)
    confSegment("phosphor/part2/16_0", 1)
    confSegment("phosphor/part2/16_1", 1)
    confSegment("phosphor/part2/16_2", 1)
    confSegment("phosphor/part2/16_3", 1)
    confSegment("phosphor/part2/16_4", 1)
    confSegment("phosphor/part1/16_0", 1)
    confSegment("phosphor/part1/16_1", 1)
    confSegment("phosphor/part1/16_2", 1)
    confSegment("phosphor/part1/16_3", 1)
    confSegment("phosphor/part1/16_4", 1)
    confSegment("river/tunnel/crank", 1)
    confSegment("river/tunnel/crank2", 1)
    confSegment("river/tunnel/hammer", 1)
    confSegment("river/tunnel/hammer2", 1)
    confSegment("river/path2/16_0", 1)
    confSegment("river/path2/16_1", 1)
    confSegment("river/path2/16_2", 1)
    confSegment("river/path2/16_3", 1)
    confSegment("river/path2/16_4", 1)
    confSegment("river/path2/16_5", 1)
    confSegment("river/path/bar", 1)
    confSegment("river/path/bar_bounce", 1)
    confSegment("river/path/bounce", 1)
    confSegment("river/path/fly", 1)
    confSegment("cave2/top/16_0", 1)
    confSegment("cave2/top/16_1", 1)
    confSegment("cave2/top/16_2", 1)
    confSegment("cave2/top/16_3", 1)
    confSegment("cave2/top/16_4", 1)
    confSegment("cave2/top/16_5", 1)
    confSegment("cave2/narrow/16_0", 1)
    confSegment("cave2/narrow/16_1", 1)
    confSegment("cave2/narrow/16_2", 1)
    confSegment("cave2/narrow/16_3", 1)
    confSegment("cave2/narrow/16_4", 1)
    confSegment("cave2/bottom/16_0", 1)
    confSegment("cave2/bottom/16_1", 1)
    confSegment("cave2/bottom/16_2", 1)
    confSegment("cave2/bottom/16_3", 1)
    confSegment("cave2/bottom/16_4", 1)
    confSegment("cave2/bottom/16_5", 1)

    -- Endless

    confSegment("endless/open/obstacles/16_sweepers_x2", 0.7)
    confSegment("endless/open/obstacles/8_suspendwindow", 0.7)
    confSegment("endless/open/obstacles/8_rotor", 0.7)
    confSegment("endless/open/obstacles/8_rotor2", 0.7)
    confSegment("endless/open/obstacles/8_foldwindow", 0.7)
    confSegment("endless/open/obstacles/8_foldwindow2", 0.7)
    confSegment("endless/open/scores/16_scoretops_x6", 0.7)
    confSegment("endless/open/scores/16_scoretops_x4", 0.7)
    confSegment("endless/open/scores/16_scoretops_x4_2", 0.7)
    confSegment("endless/open/scores/8_scoretops_x2", 0.7)
    confSegment("endless/open/scores/8_scoretop", 0.7)
    confSegment("endless/open/scores/8_scoretop2", 0.7)
    confSegment("endless/open/powerups/8_ballfrenzy", 0.7)
    confSegment("endless/open/powerups/8_ballfrenzy2", 0.7)
    confSegment("endless/open/powerups/8_nitroballs", 0.7)
    confSegment("endless/open/powerups/8_nitroballs2", 0.7)
    confSegment("endless/open/powerups/8_slomo", 0.7)
    confSegment("endless/open/powerups/8_slomo2", 0.7)
    confSegment("endless/narrow/obstacles/16_pendulums_x2", 0.7)
    confSegment("endless/narrow/obstacles/16_flycubes_x2", 0.7)
    confSegment("endless/narrow/obstacles/16_cranks_x2", 0.7)
    confSegment("endless/narrow/obstacles/8_suspendside", 0.7)
    confSegment("endless/narrow/obstacles/8_suspendbox", 0.7)
    confSegment("endless/narrow/obstacles/8_pyramid", 0.7)
    confSegment("endless/narrow/obstacles/8_beatmill", 0.7)
    confSegment("endless/narrow/scores/16_scoretops_x8", 0.7)
    confSegment("endless/narrow/scores/16_scoretops_x6", 0.7)
    confSegment("endless/narrow/scores/16_scoretops_x6_2", 0.7)
    confSegment("endless/narrow/scores/16_scoretops_x4", 0.7)
    confSegment("endless/narrow/scores/8_scoretops_x2", 0.7)
    confSegment("endless/narrow/scores/8_scoretop", 0.7)
    confSegment("endless/narrow/scores/8_scoretop2", 0.7)
    confSegment("endless/narrow/scores/8_scoretop3", 0.7)
    confSegment("endless/narrow/scores/8_scoretop4", 0.7)
    confSegment("endless/narrow/powerups/8_ballfrenzy", 0.7)
    confSegment("endless/narrow/powerups/8_ballfrenzy2", 0.7)
    confSegment("endless/narrow/powerups/8_nitroballs", 0.7)
    confSegment("endless/narrow/powerups/8_nitroballs2", 0.7)
    confSegment("endless/wide/obstacles/16_lasers", 0.7)
    confSegment("endless/wide/obstacles/16_lasers2", 0.7)
    confSegment("endless/wide/obstacles/16_dropblocks", 0.7)
    confSegment("endless/wide/obstacles/8_suspendcube", 0.7)
    confSegment("endless/wide/obstacles/8_revolver", 0.7)
    confSegment("endless/wide/obstacles/8_revolver2", 0.7)
    confSegment("endless/wide/scores/16_scoretops_x8", 0.7)
    confSegment("endless/wide/scores/16_scoretops_x6", 0.7)
    confSegment("endless/wide/scores/8_scoretop3", 0.7)
    confSegment("endless/wide/scores/8_scoretop4", 0.7)
    confSegment("endless/wide/powerups/8_ballfrenzy", 0.7)
    confSegment("endless/wide/powerups/8_ballfrenzy2", 0.7)
    confSegment("endless/wide/powerups/8_nitro", 0.7)
    confSegment("endless/space/obstacles/16_0", 0.7)
    confSegment("endless/space/obstacles/16_1", 0.7)
    confSegment("endless/space/obstacles/16_2", 0.7)
    confSegment("endless/space/obstacles/16_3", 0.7)
    confSegment("endless/space/scores/16_0", 0.7)
    confSegment("endless/space/scores/16_1", 0.7)
    confSegment("endless/space/scores/16_2", 0.7)
    confSegment("endless/space/scores/16_3", 0.7)
    
    -- Endless (unused filler used in this mod)
    
    confSegment("endless/narrow/fillers/8_0", .1)
    confSegment("endless/narrow/fillers/8_2", .25)
    confSegment("endless/narrow/fillers/8_3", .25)
    confSegment("endless/narrow/fillers/16_0", .25)
    confSegment("endless/narrow/fillers/16_1", .1)
    confSegment("endless/open/fillers/8_0", .5)
    confSegment("endless/open/fillers/8_1", .5)
    confSegment("endless/open/fillers/8_2", .1)
    confSegment("endless/open/fillers/8_3", .1)
    confSegment("endless/open/fillers/16_0", .5)
    confSegment("endless/open/fillers/16_1", .1)
    confSegment("endless/wide/fillers/8_1", .5)
    confSegment("endless/wide/fillers/8_2", .5)
    confSegment("endless/wide/fillers/8_3", 1)
    confSegment("endless/space/fillers/16_0", .5)
    confSegment("endless/space/fillers/16_1", .5)
    confSegment("endless/space/fillers/16_2", .5)
    confSegment("endless/space/fillers/16_3", .5)

    -- Zen mode

    confSegment("endless/space/powerups/16_0", 0.7)
    confSegment("endless/space/powerups/16_1", 0.7)
    confSegment("endless/space/powerups/16_2", 0.7)
    confSegment("endless/space/powerups/16_3", 0.7)
    confSegment("zen/space/scores/16_0", 0.5)
    confSegment("zen/space/scores/16_1", 0.5)
    confSegment("zen/space/scores/16_2", 0.5)
    confSegment("zen/space/scores/16_3", 0.5)
    confSegment("zen/space/obstacles/16_0", 0.7)
    confSegment("zen/space/obstacles/16_1", 0.7)
    confSegment("zen/space/obstacles/16_2", 0.7)
    confSegment("zen/space/obstacles/16_3", 0.7)
    confSegment("zen/open/obstacles/8_foldwindow", 0.7)
    confSegment("zen/open/obstacles/8_foldwindow2", 0.7)
    confSegment("zen/open/obstacles/8_suspendbox", 0.7)
    confSegment("zen/open/obstacles/8_suspendwindow", 0.7)
    confSegment("zen/open/obstacles/16_sweepers", 0.7)
    confSegment("zen/open/obstacles/16_sweepers_x2", 0.7)
    confSegment("zen/open/obstacles/dna0", 0.7)
    confSegment("zen/open/obstacles/dna1", 0.7)
    confSegment("zen/open/obstacles/dna2", 0.7)
    confSegment("zen/open/obstacles/dna3", 0.7)
    confSegment("zen/open/obstacles/8_foldwindow", 0.7)
    confSegment("zen/open/obstacles/8_foldwindow2", 0.7)
    confSegment("zen/open/obstacles/8_rotor", 0.7)
    confSegment("zen/open/obstacles/8_rotor2", 0.7)
    confSegment("zen/open/obstacles/8_suspendbox", 0.7)
    confSegment("zen/open/obstacles/8_suspendwindow", 0.7)
    confSegment("zen/open/obstacles/16_sweepers", 0.7)
    confSegment("zen/open/obstacles/16_sweepers_x2", 0.7)
    confSegment("zen/open/scores/8_scoretops_x2", 0.5)
    confSegment("zen/open/scores/16_scoretops_x4", 0.5)
    confSegment("zen/open/scores/16_scoretops_x4_2", 0.5)
    confSegment("zen/open/scores/16_scoretops_x6", 0.5)
    confSegment("zen/open/scores/16_scoretops_x8", 0.5)
    confSegment("zen/open/scores/16_scoretops_x6", 0.5)
    confSegment("zen/open/powerups/8_ballfrenzy", 0.7)
    confSegment("zen/open/powerups/8_ballfrenzy2", 0.7)
    confSegment("zen/open/powerups/8_slomo", 0.7)
    confSegment("zen/open/scores/8_scoretops_x2", 0.5)
    confSegment("zen/open/scores/16_scoretops_x4", 0.5)
    confSegment("zen/open/scores/16_scoretops_x4_2", 0.5)
    confSegment("zen/open/scores/16_scoretops_x6", 0.5)
    confSegment("zen/open/scores/16_scoretops_x8", 0.5)
    confSegment("zen/open/scores/16_scoretops_x6", 0.5)
    confSegment("zen/open/powerups/8_ballfrenzy", 0.7)
    confSegment("zen/open/powerups/8_ballfrenzy2", 0.7)
    confSegment("zen/open/powerups/8_slomo", 0.7)
    confSegment("zen/open/fillers/8_0", 0.7)
    confSegment("zen/open/fillers/8_1", 0.7)
    confSegment("zen/open/fillers/8_2", 0.7)
    confSegment("zen/open/fillers/8_3", 0.7)
    confSegment("zen/open/fillers/16_0", 0.7)
    confSegment("zen/open/fillers/16_1", 0.7)
    confSegment("zen/narrow/obstacles/8_beatmill", 0.7)
    confSegment("zen/narrow/obstacles/8_pyramid", 0.7)
    confSegment("zen/narrow/obstacles/8_suspendside", 0.7)
    confSegment("zen/narrow/obstacles/16_cranks_x2", 0.7)
    confSegment("zen/narrow/obstacles/16_pendulums_x2", 0.7)
    confSegment("zen/narrow/obstacles/fall_0", 0.7)
    confSegment("zen/narrow/obstacles/fall_1", 0.7)
    confSegment("zen/narrow/fillers/8_0", 0.7)
    confSegment("zen/narrow/fillers/8_2", 0.7)
    confSegment("zen/narrow/fillers/8_3", 0.7)
    confSegment("zen/narrow/fillers/16_0", 0.7)
    confSegment("zen/narrow/fillers/16_1", 0.7)
    confSegment("zen/narrow/scores/16_scoretops_x8", 0.5)
    confSegment("zen/narrow/scores/16_scoretops_x6", 0.5)
    confSegment("zen/narrow/scores/16_scoretops_x6_2", 0.5)
    confSegment("zen/narrow/scores/16_scoretops_x4", 0.5)
    confSegment("zen/narrow/scores/8_scoretops_x2", 0.5)
    confSegment("zen/narrow/scores/8_scoretop", 0.5)
    confSegment("zen/narrow/scores/8_scoretop2", 0.5)
    confSegment("zen/narrow/scores/8_scoretop3", 0.5)
    confSegment("zen/narrow/scores/8_scoretop4", 0.5)
    
    -- Credits
    
    confSegment("credits/start", 0.2)
    confSegment("credits/1", 0.2)
    confSegment("credits/2", 0.2)
    confSegment("credits/3", 0.2)
    
    if old_segments then
        confSegment("riverx/bar", 1)
        confSegment("riverx/bar_bounce", 1)
        confSegment("riverx/bounce", 1)
        confSegment("riverx/fly", 1)
        
        confSegment("riverx/green_hammers", 1)
        confSegment("riverx/green_turrets", 1)
        confSegment("riverx/green_cranks", 1)
        
        confSegment("riverx/blue_crank", 1)
        confSegment("riverx/blue_crank2", 1)
        confSegment("riverx/blue_hammer", 1)
        confSegment("riverx/blue_hammer2", .5)
    end

    -- Co-op/Versus Segments
    if enable_coop then
        -- Co-op segments are not fair, so allow it to be configureable.
        confSegment("split/split_bonus/8", 0.2)
        confSegment("split/split_bonus/8_2", 0.2)
        confSegment("split/split_bonus/16", 0.2)
        confSegment("split/split_bonus/16_2", 0.2)
        confSegment("split/split_bonus/16_3", 0.2)
        confSegment("split/split_bonus/16_blocks", 0.2)
        confSegment("split/split_bonus/16_gate", 0.2)
        confSegment("split/split_bonus/8_coop", 0.2)
        confSegment("split/split_bonus/8_2_coop", 0.2)
        confSegment("split/split_bonus/16_coop", 0.2)
        confSegment("split/split_bonus/16_2_coop", 0.2)
        confSegment("split/split_bonus/16_3_coop", 0.2)
        confSegment("split/split_bonus/16_blocks", 0.2)
        confSegment("split/split_bonus/16_gate_coop", 0.2)

        confSegment("split/split_rot/16_0", 0.1)
        confSegment("split/split_rot/16_1", 0.1)
        confSegment("split/split_rot/16_2", 0.1)
        confSegment("split/split_rot/16_3", 0.1)
        confSegment("split/split_rot/16_0_coop", 0.1)
        confSegment("split/split_rot/16_2_coop", 0.1)

        confSegment("split/solo/16_0_coop", 0.1)
        confSegment("split/solo/16_1", 0.1)
        confSegment("split/solo/16_2_coop", 0.1)
        confSegment("split/solo/16_3", 0.1)
        confSegment("split/solo/16_4_coop", 0.1)
        confSegment("split/solo/8_0", 0.1)
        confSegment("split/solo/16_0", 0.1)
        confSegment("split/solo/16_2", 0.1)
        confSegment("split/solo/16_4", 0.1)
        confSegment("split/solo/8_1", 0.1)

        confSegment("split/split0/16_8st", 0.1)
        confSegment("split/split0/16_8st2", 0.1)
        confSegment("split/split0/16_8st3", 0.1)
        confSegment("split/split0/16_3rotors", 0.1)
        confSegment("split/split0/16_bars", 0.1)
        confSegment("split/split0/16_fold_diamond", 0.1)
        confSegment("split/split0/16_rotor", 0.1)
        confSegment("split/split0/16_sweeper", 0.1)
        confSegment("split/split0/16_8st2", 0.1)
        confSegment("split/split0/16_8st3", 0.1)
        confSegment("split/split0/16_3rotors", 0.1)
        confSegment("split/split0/16_bars_coop", 0.1)
        confSegment("split/split0/16_bar_coop", 0.1)
        confSegment("split/split0/16_fold_diamond_coop", 0.1)
        confSegment("split/split0/16_laserbars_coop", 0.1)
        confSegment("split/split0/16_rotor_coop", 0.1)
        confSegment("split/split0/16_sweeper", 0.1)

        confSegment("split/split0/16_2lasers", 0.1)
        confSegment("split/split0/16_laserbars", 0.1)
        confSegment("split/split0/16_laserdiamond", 0.1)
        confSegment("split/split0/16_revolver", 0.1)
        confSegment("split/split0/16_rotor", 0.1)
        confSegment("split/split0/16_st", 0.1)
        confSegment("split/split0/16_suspendc", 0.1)
        confSegment("split/split0/16_vbars", 0.1)
        confSegment("split/split0/16_2lasers", 0.1)
        confSegment("split/split0/16_laserbars_coop", 0.1)
        confSegment("split/split0/16_laserdiamond_coop", 0.1)
        confSegment("split/split0/16_revolver", 0.1)
        confSegment("split/split0/16_rotor_coop", 0.1)
        confSegment("split/split0/16_st_coop", 0.1)
        confSegment("split/split0/16_vbars", 0.1)
        confSegment("split/split0/16_laser_coop", 0.1)
        confSegment("split/split0/16_sweep_coop", 0.1)

        confSegment("split/split1/16_0", 0.1)
        confSegment("split/split1/16_1", 0.1)
        confSegment("split/split1/16_2", 0.1)
        confSegment("split/split1/16_3", 0.1)
        confSegment("split/split1/16_4", 0.1)
        confSegment("split/split1/16_5", 0.1)
        confSegment("split/split1/16_6", 0.1)
        confSegment("split/split1/16_0_coop", 0.1)
        confSegment("split/split1/16_2_coop", 0.1)
        confSegment("split/split1/16_4_coop", 0.1)
        confSegment("split/split1/16_5_coop", 0.1)
        confSegment("split/split1/16_6_coop", 0.1)
        confSegment("split/split1/16_laser_coop", 0.1)
        confSegment("split/split1/16_sweep_coop", 0.1)

        confSegment("split/split2/16_0", 0.1)
        confSegment("split/split2/16_1", 0.1)
        confSegment("split/split2/16_2", 0.1)
        confSegment("split/split2/16_3", 0.1)
        confSegment("split/split2/16_0_coop", 0.1)
        confSegment("split/split2/16_2_coop", 0.1)
        confSegment("split/split2/16_3_coop", 0.1)
        confSegment("split/split2/16_suspend_coop", 0.1)

        confSegment("split/split_start/16_0", 0.1)
        confSegment("split/split_start/16_1", 0.1)
        confSegment("split/split_start/16_2", 0.1)
        confSegment("split/split_start/16_3", 0.1)
        confSegment("split/split_start/16_0_coop", 0.1)
        confSegment("split/split_start/16_1_coop", 0.1)
        confSegment("split/split_start/16_3_coop", 0.1)
    end
end

function newLoadSegments()
    local segments = {"basic/basic/chasms", "basic/basic/chasms2", "basic/basic/stairs", "basic/basic/stairs2", "basic/dark/bs", "basic/dark/bs_extraballs", "basic/dark/2_bs", "basic/dark/2_bs_elevators", "basic/dark/ledges", "basic/darker/bs", "basic/darker/2_bs_arch", "basic/darker/chasms", "basic/darker/chasms_bs", "basic/darker/powerup", "brownie/part3/16_0", "brownie/part3/16_1", "brownie/part3/16_2", "brownie/part3/16_3", "brownie/part2/16_0", "brownie/part2/16_1", "brownie/part2/16_2", "brownie/part2/16_3", "brownie/part1/16_0", "brownie/part1/16_1", "brownie/part1/16_2", "brownie/part1/16_3", "canyon/cave/8_0", "canyon/cave/16_0", "canyon/cave/32_0", "canyon/columns/4_0", "canyon/columns/16_1", "canyon/columns/16_2", "canyon/columns/32_0", "canyon/trail/8_0", "canyon/trail/16_0", "canyon/trail/16_1", "canyon/trail/16_2", "canyon/trail/16_3", "canyon/trail/32_0", "cave/spin/16_0", "cave/spin/16_1", "cave/spin/16_2", "cave/narrow/16_0", "cave/narrow/16_1", "cave/narrow/16_2", "cave/narrow/16_3", "cave/narrow/8_0", "cave/narrow/8_1", "cave/hall/32_0", "cave/hall/16_1", "cave/hall/16_2", "cave/hall/16_3", "cave/hall/8_0", "cave/hall/8_1", "cave/hall/8_2", "cave/corridor/16_0", "cave/corridor/16_1", "cave/corridor/16_2", "cave/corridor/16_3", "cave/corridor/8_0", "holodeck/bs", "holodeck/bs2", "holodeck/bs3", "holodeck/fold", "holodeck/fold2", "holodeck/fold3", "holodeck/bonus_16_0", "holodeck/bonus_16_1", "holodeck/bonus_16_2", "holodeck/bonus_16_3", "holodeck/calm0", "holodeck/calm1", "holodeck/rapid0", "holodeck/rapid1", "holodeck/rapid2", "holodeck/rapid3", "holodeck/rapid4", "holodeck/rapid5", "holodeck/rapid6", "city/trench/16_0", "city/trench/16_1", "city/trench/16_2", "city/trench/16_3", "city/trench/16_4", "city/trench/16_5", "city/fall/32_0", "city/fall/32_1", "city/fall/32_2", "city/fall/32_3", "city/fall/32_4", "city/fall/32_5", "city/narrow/16_0", "city/narrow/16_1", "city/narrow/16_2", "city/narrow/16_3", "city/narrow/16_4", "city/narrow/16_5", "city/path/16_0", "city/path/16_1", "city/path/16_2", "city/path/16_3", "city/path/16_4", "city/path/16_5", "city/path2/16_0", "city/path2/16_1", "city/path2/16_2", "city/path2/16_3", "hyperspace/warp/32_0", "hyperspace/warp/32_1", "hyperspace/warp/32_2", "hyperspace/warp/32_3", "hyperspace/orbit/32_1", "hyperspace/orbit/32_2", "hyperspace/orbit/32_3", "hyperspace/orbit/32_4", "hyperspace/orbit/32_5", "hyperspace/orbit/32_6", "hyperspace/orbit/32_7", "hyperspace/fall/32_0", "hyperspace/fall/32_1", "hyperspace/fall/32_2", "hyperspace/fall/32_3", "hyperspace/cruise/32_0", "hyperspace/cruise/32_1", "hyperspace/cruise/32_2", "hyperspace/cruise/32_3", "night/part3/elgrid_line_st", "night/part3/elgrid_line_st2", "night/part3/pendulums", "night/part3/suspendcube", "night/part3/suspendcubes", "night/part3/suspendcubes_2", "night/part3/suspendcubes_3", "night/part2/crank", "night/part2/crank2", "night/part2/dna_dec", "night/part2/dna_dec2", "night/part2/dna_st", "night/part2/dna_st2", "night/part2/dna_st3", "night/part2/bar", "night/part2/iris", "night/part1/elgrid_box", "night/part1/elgrid_box2", "night/part1/elgrid_st", "night/part1/elgrid_st_2", "night/part1/elgrid_st_3", "ocean/tunnel/16_0", "ocean/tunnel/16_1", "ocean/tunnel/16_2", "ocean/tunnel/4_0", "ocean/tunnel/4_1", "ocean/tunnel/8_0", "ocean/towers/16_0", "ocean/towers/16_1", "ocean/towers/16_2", "ocean/towers/8_0", "ocean/towers/8_1", "ocean/towers/8_2", "ocean/towers/8_3", "ocean/stairs/16_0", "ocean/stairs/32_0", "ocean/stairs/8_0", "ocean/stairs/8_1", "ocean/stairs/8_2", "ocean/sky/16_0", "ocean/sky/4_0", "ocean/sky/8_0", "ocean/sky/8_1", "phosphor/part4/16_0", "phosphor/part4/16_1", "phosphor/part4/16_2", "phosphor/part4/16_3", "phosphor/part3/16_0", "phosphor/part3/16_1", "phosphor/part3/16_2", "phosphor/part3/16_3", "phosphor/part2/16_0", "phosphor/part2/16_1", "phosphor/part2/16_2", "phosphor/part2/16_3", "phosphor/part2/16_4", "phosphor/part1/16_0", "phosphor/part1/16_1", "phosphor/part1/16_2", "phosphor/part1/16_3", "phosphor/part1/16_4", "river/tunnel/crank", "river/tunnel/crank2", "river/tunnel/hammer", "river/tunnel/hammer2", "river/path2/16_0", "river/path2/16_1", "river/path2/16_2", "river/path2/16_3", "river/path2/16_4", "river/path2/16_5", "river/path/bar", "river/path/bar_bounce", "river/path/bounce", "river/path/fly", "cave2/top/16_0", "cave2/top/16_1", "cave2/top/16_2", "cave2/top/16_3", "cave2/top/16_4", "cave2/top/16_5", "cave2/narrow/16_0", "cave2/narrow/16_1", "cave2/narrow/16_2", "cave2/narrow/16_3", "cave2/narrow/16_4", "cave2/bottom/16_0", "cave2/bottom/16_1", "cave2/bottom/16_2", "cave2/bottom/16_3", "cave2/bottom/16_4", "cave2/bottom/16_5", "endless/open/obstacles/16_sweepers_x2", "endless/open/obstacles/8_suspendwindow", "endless/open/obstacles/8_rotor", "endless/open/obstacles/8_rotor2", "endless/open/obstacles/8_foldwindow", "endless/open/obstacles/8_foldwindow2", "endless/open/scores/16_scoretops_x6", "endless/open/scores/16_scoretops_x4", "endless/open/scores/16_scoretops_x4_2", "endless/open/scores/8_scoretops_x2", "endless/open/scores/8_scoretop", "endless/open/scores/8_scoretop2", "endless/open/powerups/8_ballfrenzy", "endless/open/powerups/8_ballfrenzy2", "endless/open/powerups/8_nitroballs", "endless/open/powerups/8_nitroballs2", "endless/open/powerups/8_slomo", "endless/open/powerups/8_slomo2", "endless/narrow/obstacles/16_pendulums_x2", "endless/narrow/obstacles/16_flycubes_x2", "endless/narrow/obstacles/16_cranks_x2", "endless/narrow/obstacles/8_suspendside", "endless/narrow/obstacles/8_suspendbox", "endless/narrow/obstacles/8_pyramid", "endless/narrow/obstacles/8_beatmill", "endless/narrow/scores/16_scoretops_x8", "endless/narrow/scores/16_scoretops_x6", "endless/narrow/scores/16_scoretops_x6_2", "endless/narrow/scores/16_scoretops_x4", "endless/narrow/scores/8_scoretops_x2", "endless/narrow/scores/8_scoretop", "endless/narrow/scores/8_scoretop2", "endless/narrow/scores/8_scoretop3", "endless/narrow/scores/8_scoretop4", "endless/narrow/powerups/8_ballfrenzy", "endless/narrow/powerups/8_ballfrenzy2", "endless/narrow/powerups/8_nitroballs", "endless/narrow/powerups/8_nitroballs2", "endless/wide/obstacles/16_lasers", "endless/wide/obstacles/16_lasers2", "endless/wide/obstacles/16_dropblocks", "endless/wide/obstacles/8_suspendcube", "endless/wide/obstacles/8_revolver", "endless/wide/obstacles/8_revolver2", "endless/wide/scores/16_scoretops_x8", "endless/wide/scores/16_scoretops_x6", "endless/wide/scores/8_scoretop3", "endless/wide/scores/8_scoretop4", "endless/wide/powerups/8_ballfrenzy", "endless/wide/powerups/8_ballfrenzy2", "endless/wide/powerups/8_nitro", "endless/space/obstacles/16_0", "endless/space/obstacles/16_1", "endless/space/obstacles/16_2", "endless/space/obstacles/16_3", "endless/space/scores/16_0", "endless/space/scores/16_1", "endless/space/scores/16_2", "endless/space/scores/16_3", "endless/narrow/fillers/8_0", "endless/narrow/fillers/8_2", "endless/narrow/fillers/8_3", "endless/narrow/fillers/16_0", "endless/narrow/fillers/16_1", "endless/open/fillers/8_0", "endless/open/fillers/8_1", "endless/open/fillers/8_2", "endless/open/fillers/8_3", "endless/open/fillers/16_0", "endless/open/fillers/16_1", "endless/wide/fillers/8_1", "endless/wide/fillers/8_2", "endless/wide/fillers/8_3", "endless/space/fillers/16_0", "endless/space/fillers/16_1", "endless/space/fillers/16_2", "endless/space/fillers/16_3", "endless/space/powerups/16_0", "endless/space/powerups/16_1", "endless/space/powerups/16_2", "endless/space/powerups/16_3"}
    
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
    confSegment(segments[math.random(#segments)], mgRndFloat(0.75, 1.15))
end

function init()

    -- Random Hit - Random Room version 2.0beta1
    
    -- Here is the GitLab page for this mod's source:
    -- https://gitlab.com/cdde/smash-hit-random-rooms-1.x

    -- This room file should play nicely (if configured
    -- correctly) when repackaged into other mods.
    -- Please do not hesitate to copy this into your own
    -- Smash Hit mod as a game mode or similar!
    
    -- Special thanks to Megadron Z_Z for some help.

    -- START ROOM CONFIG
    -- This can be used to enable/disable some things...
    
    local increseing_speed = 1 
    -- For (Proof-Of-Concept) Dynamic TargetLen change
    -- FIXME: It doesn't work.
    
    local gravity_control = -1000
    -- To set gravity for all rooms
    -- A value greater than -1000 will set the
    -- gravity to that value.
    
    local rotate_chance = {20, 10}
    -- First number is main number to target through to 1
    -- Second number is the target number
    
    local music_list = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "29_2", "30", "31", "32", "33", "34", "35", "36", "37", "38_1", "38_2", "39", "40", "41", "42_1", "42_2", "43", "44", "bowling", "4_36s_test", "7_unused", "26_unused"}
    -- A list of all the music files in game that can be played as music
    -- To add a song, just add to the end of the list.
    
    local door_segments = {"brownie/part2/door", "split/split_rot/door", "split/split0/door", "split/solo/door", "split/split_rot/door", "split/split1/door", "split/split2/door", "split/split_start/door", "brownie/part1/door", "brownie/part3/door", "endless/space/door", "endless/wide/door", "endless/open/door", "endless/narrow/door", "cave/narrow/door", "cave/spin/door", "cave/hall/door", "cave/corridor/door", "cave2/narrow/door", "cave2/bottom/door", "cave2/top/door2", "cave2/top/door", "city/narrow/door", "city/path2/door", "city/fall/door", "city/path/door", "city/trench/door", "canyon/cave/door", "canyon/trail/door", "canyon/columns/door", "phosphor/part4/door", "phosphor/part2/door", "phosphor/part1/door", "phosphor/part3/door", "holodeck/rapid_door", "holodeck/calm_door", "holodeck/bonus_door", "holodeck/beat_door", "holodeck/bonus_door", "zen/space/door", "zen/open/door", "zen/open/door", "zen/narrow/door", "ocean/towers/door", "ocean/stairs/door", "ocean/sky/door", "ocean/tunnel/door", "night/part2/door", "night/part1/door", "night/part3/door", "hyperspace/fall/door", "hyperspace/orbit/door", "hyperspace/warp/door", "hyperspace/cruise/door", "basic/darker/door", "basic/basic/door", "basic/dark/door", "river/path2/door", "river/path/door", "river/tunnel/door"}
    -- A list of all the segments that are used to end a room
    
    local start_segments = {"holodeck/bonus_start", "holodeck/start0", "holodeck/rapid_start", "holodeck/boss/start", "holodeck/calm_start", "basic/darker/start", "basic/dark/start", "basic/basic/start", "brownie/part3/start", "brownie/part2/start", "brownie/part1/start", "canyon/trail/start", "canyon/columns/start", "canyon/cave/start", "cave/spin/start", "cave/narrow/start", "cave/corridor/start", "cave2/top/start", "cave2/narrow/start", "cave2/bottom/start", "city/path/start", "city/narrow/start", "city/fall/start", "city/path/start", "city/path2/start", "hyperspace/warp/start", "hyperspace/orbit/start", "hyperspace/fall/start", "hyperspace/cruise/start", "night/part3/start", "night/part2/start", "night/part1/start", "ocean/tunnel/start", "ocean/towers/start", "ocean/stairs/start", "ocean/sky/start", "phosphor/part4/start", "phosphor/part3/start", "phosphor/part2/start", "phosphor/part1/start", "river/tunnel/start", "river/path2/start", "river/path/start"}
    -- A list of all the segments that are used to start a room

    -- END ROOM CONFIG

    pStart = mgGetBool("start", true)
    pEnd = mgGetBool("end", true)
    pDifficulty = mgGetFloat("rrdifficulty", 1.0)

    local music = music_list[math.random(#music_list)]
    
    local r0 = mgRndFloat(0.15, 1.15)
    local g0 = mgRndFloat(0.15, 1.15)
    local b0 = mgRndFloat(0.15, 1.15)
    local r1 = mgRndFloat(0.15, 1.15)
    local g1 = mgRndFloat(0.15, 1.15)
    local b1 = mgRndFloat(0.15, 1.15)
    
    local gravity = mgRndFloat(-0.15, 1.15)
    local conflict = math.random(0, 1)
    
    -- The following fixes the stop glitch, since 38 and 42 aren't real
    -- musics, instead we use 29/_2, 38_1/2 and 42_1/2.

    -- Setup enviorment
    mgMusic(tostring(music)) -- Probably better to convert music to a string first
    mgFogColor(r0, g0, b0, r1, g1, b1)
    if gravity_control > -1000 then
        mgGravity(gravity_control)
    else
        local r = math.random(1, 8)
        if r == 3 then
            mgGravity(gravity)
        else
            mgGravity(1)
        end
    end

    local r = math.random(5)

    if r == 1 then
        mgParticles("starfield")
    elseif r == 2 then
        mgParticles("sidesrising")
    elseif r == 3 then
        mgParticles("lowrising")
    elseif r == 4 then
        mgParticles("falling")
    end

    -- CONSDIER: Rotation is tied to music
    local t = math.random(rotate_chance[1])
    if t == rotate_chance[2] then
        local x = math.random(-2, 2)
        local y = math.random(-2, 2)
        mgSetRotation(x, y)
    end

    -- To help reduce clutter, I've moved the confSgement(s) statements into its own function...
    loadSegments(true, false)
    --newLoadSegments()
    
    l = 0
    
    -- Random starting segment
    if pStart then
        l = l + mgSegment(start_segments[math.random(#start_segments)], -l)
    end

    -- Set the modification for playing in various game modes
    if mgGet("player.mode") == "0" then
        mode_modify = 0.75
    elseif mgGet("player.mode") == "2" then
        mode_modify = 1.25
    elseif mgGet("player.mode") == "3" then
        mode_modify = 0.25
    else
        mode_modify = 1.0
    end
    
    -- Next line does this: 
    -- Random Number 150 to 350 times Difficulty times Game Mode = Our target length
    local targetLen = math.random(150, 350) * pDifficulty * mode_modify

    if increaseing_speed == 1 then
        -- Get game speed
        k = mgGetInt("game.speed")
        -- Check that game speed is no less than 150
        if k < 150 then
            k = 150
        end
        -- add 5 to game speed
        k = k + 5
        -- Check that game speed is no greater than 300
        if k > 300 then
            k = 300
        end
        -- Set new speed to length and game.speed
        targetLen = k
        mgSetInt("game.speed", k)
    end

    while l < targetLen do
        s = nextSegment()
        l = l + mgSegment(s, -l)    
        l = l + math.random(2, 6) -- Add some space between segments
    end

    -- Random Doors

    if pEnd then
        l = l + mgSegment(door_segments[math.random(#door_segments)], -l)
    end

    mgLength(l)
end

function tick()
end
