function init()

    -- Random Hit - Boss Room version 2.0
    
    -- Here is the GitLab page for this mod's source:
    -- https://gitlab.com/cdde/smash-hit-random-rooms-1.x

    -- This room file should play nicely (if configured
    -- correctly) when repackaged into other mods.
    -- Please do not hesitate to copy this into your own
    -- Smash Hit mod as a game mode or similar!
    
    -- Special thanks to Megadron Z_Z for some help.

    -- START ROOM CONFIG
    -- This can be used to enable/disable some things...
    
    local gravity_control = -1000
    -- To set gravity for all rooms
    -- A value greater than -1000 will set the
    -- gravity to that value.
    
    local rotate_chance = {20, 10}
    -- First number is main number to target through to 1
    -- Second number is the target number
    
    local music_list = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "29_2", "30", "31", "32", "33", "34", "35", "36", "37", "38_1", "38_2", "39", "40", "41", "42_1", "42_2", "43", "44", "bowling", "4_36s_test", "7_unused", "26_unused"}
    -- A list of all the music files in game that can be played as music
    -- To add a song, just add to the end of the list.
    
    ---------------------------------------------------------------------------
    
    local music = music_list[math.random(#music_list)]
    
    local r0 = mgRndFloat(0.15, 1.15)
    local g0 = mgRndFloat(0.15, 1.15)
    local b0 = mgRndFloat(0.15, 1.15)
    local r1 = mgRndFloat(0.15, 1.15)
    local g1 = mgRndFloat(0.15, 1.15)
    local b1 = mgRndFloat(0.15, 1.15)
        
    mgMusic(tostring(music))
    mgFogColor(r0, g0, b0, r1, g1, b1)
    
    local t = math.random(rotate_chance[1])
    if t == rotate_chance[2] then
        local x = math.random(-2, 2)
        local y = math.random(-2, 2)
        mgSetRotation(x, y)
    end
    
    ---------------------------------------------------------------------------
    
    -- Lists for each segment in checkpoints
    local starts = {"basic/boss/start", "night/boss/start", "holodeck/boss/start", "cave/boss/start", "canyon/boss/start", "ocean/boss/start", "cave2/boss/start", "river/boss/start", "brownie/boss/start", "phosphor/boss/start", "hyperspace/boss/start", "city/boss/start"}
    
    local mids = {"basic/boss/mid", "night/boss/mid", "holodeck/boss/mid", "cave/boss/mid", "canyon/boss/mid", "ocean/boss/mid", "cave2/boss/mid", "river/boss/mid", "brownie/boss/mid", "phosphor/boss/mid", "hyperspace/boss/mid", "city/boss/mid"}
    
    local ends = {"basic/boss/end", "night/boss/end", "holodeck/boss/end", "cave/boss/end", "canyon/boss/end", "ocean/boss/end", "cave2/boss/end", "river/boss/end", "brownie/boss/end", "phosphor/boss/end", "hyperspace/boss/end", "city/boss/end"}

    l = 0
    -- Get a random segment
    local rand_start = starts[math.random(#starts)]
    l = l + mgSegment(rand_start, -l)
    local rand_mid = mids[math.random(#mids)]
    l = l + mgSegment(rand_mid, -l)
    local rand_end = ends[math.random(#ends)]
    l = l + mgSegment(rand_end, -l)

    mgLength(l)
end

function tick()
end
